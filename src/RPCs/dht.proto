syntax = "proto3";

option go_package = "ipfs/dht_proto";

package dht_proto;
import "google/protobuf/empty.proto";

// Skeleton code for jerry and hosung's RPC

service DHT_Service {
  // from their david design doc, im not sure what ping is for
  rpc Ping (PingRequest) returns (PingReply) {}
  rpc Put ( PutRequest ) returns (google.protobuf.Empty) {}
  rpc Get ( GetRequest ) returns (GetReply){}
  rpc AddPeer (AddPeerRequest) returns (google.protobuf.Empty) {}
  rpc DelPeer (DelPeerRequest) returns (google.protobuf.Empty) {}
  rpc GetNearestNeighbors (GetNearestNeighborsRequest) returns (GetNearestNeighborsReply) {}
}

message PingRequest {
  optional string message = 1;
}

message PingReply {
  optional string message = 1;
}

message PutRequest {
  optional string cid = 1;
  optional int32 peerId = 2;
}

message GetRequest {
  optional string cid = 1;
  optional bool isServer = 2;
}

message GetReply {
  optional string peerId = 1;
}

message AddPeerRequest {
  optional string peerId = 1;
}

message DelPeerRequest {
  optional string peerId = 1;
}

message GetNearestNeighborsRequest {
  optional int32 countNeighbors = 1;
}

message GetNearestNeighborsReply {
  repeated string peerId = 1;
}






